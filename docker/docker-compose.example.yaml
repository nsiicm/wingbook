services:
  postgres:
    image: postgres:14-alpine
    # ports:
    #   - 5432:5432
    volumes:
      - ${VOLUMES_LOCATION}/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - wingbook
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wingbook"]
      interval: 5s
      timeout: 5s
      retries: 5
  db-backup:
    build:
      context: ../backup/
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ${VOLUMES_LOCATION}/backups:/backups
    depends_on:
      - postgres
    networks:
      - wingbook
  server:
    build:
      context: ../server/
      dockerfile: Dockerfile
    ports:
      - 8012:8000
    env_file:
      - .env
    networks:
      - wingbook
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../server/wingbook/api/migrations:/app/wingbook/api/migrations
  front:
    build:
      context: ../front/
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    ports:
      - 8013:3000
    env_file:
      - .env

networks:
  wingbook: